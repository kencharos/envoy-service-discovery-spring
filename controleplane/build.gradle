buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'
apply plugin: "idea"


def reactiveGrpcVersion = '0.9.0'
def grpcVersion = '1.18.0'
def protobufVersion = '3.6.1'

group = 'my.sdtest'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    compile "com.google.protobuf:protobuf-java:${protobufVersion}"
    compile "com.salesforce.servicelibs:reactor-grpc-stub:${reactiveGrpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-netty:${grpcVersion}"

    // https://mvnrepository.com/artifact/io.envoyproxy.controlplane/java-control-plane
    compile group: 'io.envoyproxy.controlplane', name: 'java-control-plane', version: '0.1.14', ext: 'pom'
    // https://mvnrepository.com/artifact/io.envoyproxy.controlplane/cache
    compile group: 'io.envoyproxy.controlplane', name: 'cache', version: '0.1.14'
    compile group: 'io.envoyproxy.controlplane', name: 'server', version: '0.1.14'



    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}


task cleanProtoGen{
    doFirst{
        delete("$projectDir/src/main/generated-proto")
    }
}
clean.dependsOn cleanProtoGen

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        reactor {
            artifact = "com.salesforce.servicelibs:reactor-grpc:${reactiveGrpcVersion}:jdk8@jar"
        }
    }
    generateProtoTasks {

        all().each { task ->
            task.builtins {
                java {
                    outputSubDir = 'generated-proto'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'generated-proto'
                }
            }
            task.plugins {
                reactor {
                    outputSubDir = 'generated-proto'
                }
            }
        }
    }
    generatedFilesBaseDir = "${projectDir}/src/"
}
