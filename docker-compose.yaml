version: '2'
services:
  controleplane:
    build:
      context: ./controleplane
    image: controleplane:latest
    container_name: controleplane
    environment:
      - "GRPC_PORT=6000"
      - "SERVER_PORT=8084"
    ports:
      - "6000:6000"
      - "8084:8084"
  front-proxy:
    build:
      context: ./front-proxy
    image: front-proxy:latest
    container_name: front-proxy
    ports:
      - "3000:3000"
      - "8000:8000"
      - "10001:10001"
  front-app:
    build:
      context: ./front
    image: front-app:latest
    container_name: front-app
    environment: #envoyのegressをさす
      - "GRPC_HOST=front-proxy"
      - "GRPC_PORT=8000"
    ports:
      - "8080:8080"

  backend1-proxy:
    build:
      context: ./backend1-proxy
    image: backend1-proxy:latest
    container_name: backend1-proxy
    ports:
      - "3001:3001"
      - "8001:8001"
  backend1-app:
    build:
      context: ./backend1
    image: backend1-app:latest
    container_name: backend1-app
    environment: # 自分のsidecarのipでOK 
      - "GRPC_BACKEND2_HOST=backend1-proxy"
      - "GRPC_BACKEND2_PORT=8001"
    ports:
      - "8081:8081"
      - "6566:6566"


  backend2-proxy:
    build:
      context: ./backend2-proxy
    image: backend2-proxy:latest
    container_name: backend2-proxy
    ports:
      - "3002:3002"
      - "8002:8002"
  backend2-app:
    build:
      context: ./backend2
    image: backend2-app:latest
    container_name: backend2-app
    ports:
      - "8082:8082"
      - "6567:6567"


  backend2-proxy-b:
    build:
      context: ./backend2-proxy-b
    image: backend2-proxy-b:latest
    container_name: backend2-proxy-b
    ports:
      - "3003:3003"
      - "8003:8003"
  backend2-app-b:
    build:
      context: ./backend2
    image: backend2-app:latest
    container_name: backend2-app-b
    environment: 
      - "SERVER_PORT=8083"
      - "GRPC_PORT=6568"
    ports:
      - "8083:8083"
      - "6568:6568"
